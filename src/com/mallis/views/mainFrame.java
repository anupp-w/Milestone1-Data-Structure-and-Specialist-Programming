package com.mallis.views;

import com.mallis.controller.BinarySearch;
import com.mallis.controller.InsertionSort;
import com.mallis.controller.MergeSort;
import com.mallis.controller.SelectionSort;
import com.mallis.model.MallBlocks;
import java.awt.event.ActionEvent;
import java.util.Collections;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anup Wagle 23048623
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();
        loginPnl.setVisible(true);
        mainPagePnl.setVisible(false);
        BlockData.add(new MallBlocks(401, 101, "Ram", 4, 500, 12));
        BlockData.add(new MallBlocks(402, 102, "Hari", 4, 600, 6));
        BlockData.add(new MallBlocks(501, 201, "Anup", 5, 700, 8));
        BlockData.add(new MallBlocks(601, 301, "Navodit", 6, 800, 10));
        BlockData.add(new MallBlocks(701, 401, "Pawan", 7, 900, 5));
        updateDataTable();
    }

    private LinkedList<MallBlocks> BlockData = new LinkedList<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginPnl = new javax.swing.JPanel();
        rightPnlCover = new javax.swing.JPanel();
        titleLoginLbl = new javax.swing.JLabel();
        usernameLbl = new javax.swing.JLabel();
        userField = new javax.swing.JTextField();
        passwordLbl = new javax.swing.JLabel();
        passField = new javax.swing.JPasswordField();
        forgotpasswordLbl = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        bgImgLbl = new javax.swing.JLabel();
        mainPagePnl = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();
        titleNameLbl = new javax.swing.JLabel();
        mainPageTabs = new javax.swing.JTabbedPane();
        homeTabPnl = new javax.swing.JPanel();
        homeWelcomeTitleLbl = new javax.swing.JLabel();
        textTitleLbl = new javax.swing.JLabel();
        eligibleLbl = new javax.swing.JLabel();
        feature1Lbl = new javax.swing.JLabel();
        feature2Lbl = new javax.swing.JLabel();
        getStartedButton = new javax.swing.JButton();
        adminDashTabPnl = new javax.swing.JPanel();
        spaceIDTxtFld = new javax.swing.JTextField();
        monPriceTxtFld = new javax.swing.JTextField();
        flatNumTxtFld = new javax.swing.JTextField();
        rentalMonthsTxtFld = new javax.swing.JTextField();
        customerIDTxtFld = new javax.swing.JTextField();
        customerNameTxtFld = new javax.swing.JTextField();
        buttonHolderPnl = new javax.swing.JPanel();
        addDataButton = new javax.swing.JButton();
        updateAvailabilityButton = new javax.swing.JButton();
        deleteDataButton = new javax.swing.JButton();
        clearFldsButton = new javax.swing.JButton();
        dataTableTabPnl = new javax.swing.JPanel();
        tableScrollPane = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        sortLbl = new javax.swing.JLabel();
        sortByComBox = new javax.swing.JComboBox<>();
        ascDscComBox = new javax.swing.JComboBox<>();
        sortButton = new javax.swing.JButton();
        searchTxtFld = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        bgLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(144, 238, 144));
        setForeground(new java.awt.Color(245, 245, 220));
        setMaximumSize(new java.awt.Dimension(800, 450));
        setMinimumSize(new java.awt.Dimension(800, 450));
        setSize(new java.awt.Dimension(800, 450));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginPnl.setBackground(new java.awt.Color(155, 168, 171));
        loginPnl.setLayout(null);

        rightPnlCover.setBackground(new java.awt.Color(37, 55, 69));

        titleLoginLbl.setFont(new java.awt.Font("Anglice DEMO", 1, 65)); // NOI18N
        titleLoginLbl.setForeground(new java.awt.Color(155, 168, 171));
        titleLoginLbl.setText("Login");

        usernameLbl.setBackground(new java.awt.Color(255, 255, 255));
        usernameLbl.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        usernameLbl.setForeground(new java.awt.Color(255, 255, 255));
        usernameLbl.setText("Username");

        userField.setText("Enter your username");
        userField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userFieldActionPerformed(evt);
            }
        });

        passwordLbl.setBackground(new java.awt.Color(255, 255, 255));
        passwordLbl.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        passwordLbl.setForeground(new java.awt.Color(255, 255, 255));
        passwordLbl.setText("Password");

        passField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passFieldActionPerformed(evt);
            }
        });

        forgotpasswordLbl.setFont(new java.awt.Font("Candara", 0, 8)); // NOI18N
        forgotpasswordLbl.setForeground(new java.awt.Color(255, 255, 255));
        forgotpasswordLbl.setText("forgot your password?");
        forgotpasswordLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        forgotpasswordLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                forgotpasswordLblMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                forgotpasswordLblMousePressed(evt);
            }
        });

        loginButton.setBackground(new java.awt.Color(17, 33, 45));
        loginButton.setFont(new java.awt.Font("The Bold Font", 0, 14)); // NOI18N
        loginButton.setForeground(new java.awt.Color(255, 255, 255));
        loginButton.setText("LOGIN");
        loginButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        loginButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rightPnlCoverLayout = new javax.swing.GroupLayout(rightPnlCover);
        rightPnlCover.setLayout(rightPnlCoverLayout);
        rightPnlCoverLayout.setHorizontalGroup(
            rightPnlCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPnlCoverLayout.createSequentialGroup()
                .addGroup(rightPnlCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rightPnlCoverLayout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addGroup(rightPnlCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleLoginLbl)
                            .addGroup(rightPnlCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(userField)
                                .addComponent(passwordLbl)
                                .addComponent(usernameLbl)
                                .addComponent(passField))))
                    .addGroup(rightPnlCoverLayout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addGroup(rightPnlCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loginButton)
                            .addComponent(forgotpasswordLbl))))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        rightPnlCoverLayout.setVerticalGroup(
            rightPnlCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPnlCoverLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(titleLoginLbl)
                .addGap(18, 18, 18)
                .addComponent(usernameLbl)
                .addGap(4, 4, 4)
                .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(forgotpasswordLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginButton)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        loginPnl.add(rightPnlCover);
        rightPnlCover.setBounds(340, 30, 430, 340);

        bgImgLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mallis/resources/yeaaa.png"))); // NOI18N
        loginPnl.add(bgImgLbl);
        bgImgLbl.setBounds(0, 0, 800, 450);

        getContentPane().add(loginPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 450));

        mainPagePnl.setMaximumSize(new java.awt.Dimension(800, 450));
        mainPagePnl.setMinimumSize(new java.awt.Dimension(800, 450));
        mainPagePnl.setName(""); // NOI18N
        mainPagePnl.setPreferredSize(new java.awt.Dimension(800, 450));
        mainPagePnl.setLayout(null);

        logoutButton.setBackground(new java.awt.Color(37, 55, 69));
        logoutButton.setFont(new java.awt.Font("The Bold Font", 0, 14)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton.setText("LOGOUT");
        logoutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });
        mainPagePnl.add(logoutButton);
        logoutButton.setBounds(600, 60, 100, 30);

        titleNameLbl.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 48)); // NOI18N
        titleNameLbl.setForeground(new java.awt.Color(37, 55, 69));
        titleNameLbl.setText("BlocksIn");
        mainPagePnl.add(titleNameLbl);
        titleNameLbl.setBounds(70, 50, 160, 40);

        mainPageTabs.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        homeTabPnl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        homeTabPnl.setLayout(null);

        homeWelcomeTitleLbl.setFont(new java.awt.Font("Anglice DEMO", 0, 48)); // NOI18N
        homeWelcomeTitleLbl.setText("Welcome to BlocksIn. ");
        homeTabPnl.add(homeWelcomeTitleLbl);
        homeWelcomeTitleLbl.setBounds(230, 40, 304, 48);

        textTitleLbl.setFont(new java.awt.Font("Candara Light", 0, 12)); // NOI18N
        textTitleLbl.setText("A Mall Space Management System");
        homeTabPnl.add(textTitleLbl);
        textTitleLbl.setBounds(290, 80, 172, 20);

        eligibleLbl.setFont(new java.awt.Font("Yu Gothic Light", 0, 12)); // NOI18N
        eligibleLbl.setText("You are now eligible to:");
        homeTabPnl.add(eligibleLbl);
        eligibleLbl.setBounds(300, 110, 130, 16);

        feature1Lbl.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        feature1Lbl.setText("View Space Area Availability");
        homeTabPnl.add(feature1Lbl);
        feature1Lbl.setBounds(290, 140, 164, 20);

        feature2Lbl.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        feature2Lbl.setText("Add, Update, Delete and View Space Area Records");
        homeTabPnl.add(feature2Lbl);
        feature2Lbl.setBounds(230, 160, 300, 20);

        getStartedButton.setBackground(new java.awt.Color(17, 33, 45));
        getStartedButton.setForeground(new java.awt.Color(255, 255, 255));
        getStartedButton.setText("Get Started!");
        getStartedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getStartedButtonActionPerformed(evt);
            }
        });
        homeTabPnl.add(getStartedButton);
        getStartedButton.setBounds(320, 200, 100, 23);

        mainPageTabs.addTab("Home", homeTabPnl);

        adminDashTabPnl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        spaceIDTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Space ID:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Candara", 1, 14), new java.awt.Color(74, 92, 106))); // NOI18N
        spaceIDTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spaceIDTxtFldActionPerformed(evt);
            }
        });

        monPriceTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Monthly Price:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Candara", 1, 14), new java.awt.Color(74, 92, 106))); // NOI18N
        monPriceTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monPriceTxtFldActionPerformed(evt);
            }
        });

        flatNumTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Flat Number:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Candara", 1, 14), new java.awt.Color(74, 92, 106))); // NOI18N
        flatNumTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flatNumTxtFldActionPerformed(evt);
            }
        });

        rentalMonthsTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rental Months:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Candara", 1, 14), new java.awt.Color(74, 92, 106))); // NOI18N
        rentalMonthsTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentalMonthsTxtFldActionPerformed(evt);
            }
        });

        customerIDTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Customer ID:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Candara", 1, 14), new java.awt.Color(74, 92, 106))); // NOI18N
        customerIDTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerIDTxtFldActionPerformed(evt);
            }
        });

        customerNameTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Customer Name:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Candara", 1, 14), new java.awt.Color(74, 92, 106))); // NOI18N
        customerNameTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameTxtFldActionPerformed(evt);
            }
        });

        buttonHolderPnl.setBackground(new java.awt.Color(37, 55, 69));

        addDataButton.setBackground(new java.awt.Color(155, 168, 171));
        addDataButton.setFont(new java.awt.Font("Bebas", 0, 14)); // NOI18N
        addDataButton.setForeground(new java.awt.Color(37, 55, 69));
        addDataButton.setText("Add Data");
        addDataButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addDataButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDataButtonActionPerformed(evt);
            }
        });

        updateAvailabilityButton.setBackground(new java.awt.Color(155, 168, 171));
        updateAvailabilityButton.setFont(new java.awt.Font("Bebas", 0, 14)); // NOI18N
        updateAvailabilityButton.setForeground(new java.awt.Color(37, 55, 69));
        updateAvailabilityButton.setText("Update Availability");
        updateAvailabilityButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateAvailabilityButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        updateAvailabilityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAvailabilityButtonActionPerformed(evt);
            }
        });

        deleteDataButton.setBackground(new java.awt.Color(155, 168, 171));
        deleteDataButton.setFont(new java.awt.Font("Bebas", 0, 14)); // NOI18N
        deleteDataButton.setForeground(new java.awt.Color(37, 55, 69));
        deleteDataButton.setText("Delete Data");
        deleteDataButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteDataButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDataButtonActionPerformed(evt);
            }
        });

        clearFldsButton.setBackground(new java.awt.Color(155, 168, 171));
        clearFldsButton.setFont(new java.awt.Font("Bebas", 0, 14)); // NOI18N
        clearFldsButton.setForeground(new java.awt.Color(37, 55, 69));
        clearFldsButton.setText("Clear Fields");
        clearFldsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearFldsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clearFldsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFldsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonHolderPnlLayout = new javax.swing.GroupLayout(buttonHolderPnl);
        buttonHolderPnl.setLayout(buttonHolderPnlLayout);
        buttonHolderPnlLayout.setHorizontalGroup(
            buttonHolderPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonHolderPnlLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addComponent(deleteDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonHolderPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateAvailabilityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
            .addGroup(buttonHolderPnlLayout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(clearFldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        buttonHolderPnlLayout.setVerticalGroup(
            buttonHolderPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonHolderPnlLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(buttonHolderPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(clearFldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(updateAvailabilityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout adminDashTabPnlLayout = new javax.swing.GroupLayout(adminDashTabPnl);
        adminDashTabPnl.setLayout(adminDashTabPnlLayout);
        adminDashTabPnlLayout.setHorizontalGroup(
            adminDashTabPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDashTabPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminDashTabPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminDashTabPnlLayout.createSequentialGroup()
                        .addComponent(spaceIDTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(flatNumTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adminDashTabPnlLayout.createSequentialGroup()
                        .addGroup(adminDashTabPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(monPriceTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerIDTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(adminDashTabPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rentalMonthsTxtFld, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerNameTxtFld, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonHolderPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        adminDashTabPnlLayout.setVerticalGroup(
            adminDashTabPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDashTabPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminDashTabPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spaceIDTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flatNumTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(adminDashTabPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerIDTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerNameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(adminDashTabPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rentalMonthsTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monPriceTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(buttonHolderPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        mainPageTabs.addTab("Admin Dashboard", adminDashTabPnl);

        dataTableTabPnl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        dataTable.setFont(new java.awt.Font("Candara", 1, 12)); // NOI18N
        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Space ID", "Customer ID", "Customer Name", "Flat Number", "Monthly Price", "Number of Months", "Full Price", "Availability"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableScrollPane.setViewportView(dataTable);
        if (dataTable.getColumnModel().getColumnCount() > 0) {
            dataTable.getColumnModel().getColumn(0).setResizable(false);
            dataTable.getColumnModel().getColumn(1).setResizable(false);
            dataTable.getColumnModel().getColumn(2).setResizable(false);
            dataTable.getColumnModel().getColumn(3).setResizable(false);
            dataTable.getColumnModel().getColumn(4).setResizable(false);
            dataTable.getColumnModel().getColumn(5).setResizable(false);
            dataTable.getColumnModel().getColumn(6).setResizable(false);
            dataTable.getColumnModel().getColumn(7).setResizable(false);
        }

        sortLbl.setFont(new java.awt.Font("The Bold Font", 0, 14)); // NOI18N
        sortLbl.setForeground(new java.awt.Color(43, 48, 59));
        sortLbl.setText("Sort By:");

        sortByComBox.setMaximumRowCount(2);
        sortByComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Space ID", "Customer Name" }));
        sortByComBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortByComBoxActionPerformed(evt);
            }
        });

        ascDscComBox.setMaximumRowCount(2);
        ascDscComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascending", "Descending" }));
        ascDscComBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ascDscComBoxActionPerformed(evt);
            }
        });

        sortButton.setText("Sort");
        sortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButtonActionPerformed(evt);
            }
        });

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mallis/resources/search.png"))); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dataTableTabPnlLayout = new javax.swing.GroupLayout(dataTableTabPnl);
        dataTableTabPnl.setLayout(dataTableTabPnlLayout);
        dataTableTabPnlLayout.setHorizontalGroup(
            dataTableTabPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
            .addGroup(dataTableTabPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sortLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sortByComBox, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ascDscComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        dataTableTabPnlLayout.setVerticalGroup(
            dataTableTabPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataTableTabPnlLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(dataTableTabPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortLbl)
                    .addComponent(sortByComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ascDscComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)
                    .addComponent(sortButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPageTabs.addTab("Data Table", dataTableTabPnl);

        mainPagePnl.add(mainPageTabs);
        mainPageTabs.setBounds(20, 110, 760, 290);
        mainPageTabs.getAccessibleContext().setAccessibleName("Home");

        bgLbl.setForeground(new java.awt.Color(17, 43, 54));
        bgLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mallis/resources/anything.jpg"))); // NOI18N
        mainPagePnl.add(bgLbl);
        bgLbl.setBounds(0, 0, 800, 450);

        getContentPane().add(mainPagePnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userFieldActionPerformed

    private void forgotpasswordLblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgotpasswordLblMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_forgotpasswordLblMousePressed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        String username = userField.getText().trim();
        String password = new String(passField.getPassword());

        if (username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in both fields.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            if (username.equals("anup") && password.equals("admin")) {
                loginPnl.setVisible(false);
                mainPagePnl.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Invalid username or password.", "Login Failed", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void forgotpasswordLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgotpasswordLblMouseClicked
        JOptionPane.showMessageDialog(this, "You might have to contact company for this one!", "Forgot Password", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_forgotpasswordLblMouseClicked

    private void spaceIDTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spaceIDTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spaceIDTxtFldActionPerformed

    private void monPriceTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monPriceTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monPriceTxtFldActionPerformed

    private void flatNumTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flatNumTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_flatNumTxtFldActionPerformed

    private void rentalMonthsTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentalMonthsTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rentalMonthsTxtFldActionPerformed

    private void customerIDTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerIDTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerIDTxtFldActionPerformed

    private void customerNameTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameTxtFldActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        mainPagePnl.setVisible(false);
        loginPnl.setVisible(true);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void clearInputFields() {
        spaceIDTxtFld.setText("");
        customerIDTxtFld.setText("");
        customerNameTxtFld.setText("");
        flatNumTxtFld.setText("");
        monPriceTxtFld.setText("");
        rentalMonthsTxtFld.setText("");
    }

    private void addDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDataButtonActionPerformed
        try {
            int spaceID = Integer.parseInt(spaceIDTxtFld.getText());
            int customerID = Integer.parseInt(customerIDTxtFld.getText());
            String customerName = customerNameTxtFld.getText();
            int flatNumber = Integer.parseInt(flatNumTxtFld.getText());
            int monthlyPrice = Integer.parseInt(monPriceTxtFld.getText());
            int rentalMonths = Integer.parseInt(rentalMonthsTxtFld.getText());
            MallBlocks newBlock = new MallBlocks(spaceID, customerID, customerName, flatNumber, monthlyPrice, rentalMonths);
            BlockData.add(newBlock);
            updateDataTable();
            clearInputFields();
            JOptionPane.showMessageDialog(this, "Data added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter Numeric Data Properly!!!", "Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error Detected" + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addDataButtonActionPerformed

    private void updateDataTable() {
        DefaultTableModel model = (DefaultTableModel) dataTable.getModel();
        model.setRowCount(0);

        for (MallBlocks block : BlockData) {
            model.addRow(new Object[]{
                block.getSpaceID(),
                block.getCustomerID(),
                block.getCustomerName(),
                block.getFlatNumber(),
                block.getMonthlyPrice(),
                block.getRentalMonths(),
                block.getFullPrice(),
                block.isAvailable()
            });
        }
    }

    private void updateAvailabilityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAvailabilityButtonActionPerformed
        try {
            int spaceID = Integer.parseInt(spaceIDTxtFld.getText().trim());
            boolean found = false;
            for (MallBlocks block : BlockData) {
                if (block.getSpaceID() == spaceID) {
                    block.setAvailability(!block.isAvailable());
                    found = true;
                    String availabilityStatus = block.isAvailable() ? "available" : "not available";
                    JOptionPane.showMessageDialog(this, "Space ID " + spaceID + " is " + availabilityStatus + " now!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
            }
            if (!found) {
                JOptionPane.showMessageDialog(this, "Space ID not found!", "ID Error", JOptionPane.ERROR_MESSAGE);
            }

            updateDataTable();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Space ID.", "Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error detected: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_updateAvailabilityButtonActionPerformed

    private void deleteDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDataButtonActionPerformed
        try {
            int spaceID = Integer.parseInt(spaceIDTxtFld.getText().trim());
            boolean found = false;
            for (MallBlocks block : BlockData) {
                if (block.getSpaceID() == spaceID) {
                    BlockData.remove(block);
                    found = true;
                    JOptionPane.showMessageDialog(this, "Data deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
            }

            if (!found) {
                JOptionPane.showMessageDialog(this, "Space ID not found.", "Error", JOptionPane.ERROR_MESSAGE);
            }

            updateDataTable();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Space ID", "Numeric Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error detected: ", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteDataButtonActionPerformed

    private void clearFldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFldsButtonActionPerformed
        spaceIDTxtFld.setText("");
        customerIDTxtFld.setText("");
        customerNameTxtFld.setText("");
        flatNumTxtFld.setText("");
        monPriceTxtFld.setText("");
        rentalMonthsTxtFld.setText("");
    }//GEN-LAST:event_clearFldsButtonActionPerformed

    private void getStartedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getStartedButtonActionPerformed
        mainPageTabs.setSelectedIndex(1);
    }//GEN-LAST:event_getStartedButtonActionPerformed

    private void passFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passFieldActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String searchText = searchTxtFld.getText().trim();

        try {
            int searchSpaceID = Integer.parseInt(searchText);

            String selectedCriteria = (String) sortByComBox.getSelectedItem();
            if (selectedCriteria.equals("Space ID")) {
                MergeSort.sortBySpaceID(BlockData);
            }

            MallBlocks result = BinarySearch.searchBySpaceID(BlockData, searchSpaceID);

            if (result != null) {
                String infoMessage = "Space ID: " + result.getSpaceID()
                        + "\nCustomer ID: " + result.getCustomerID()
                        + "\nCustomer Name: " + result.getCustomerName()
                        + "\nFlat Number: " + result.getFlatNumber()
                        + "\nMonthly Price: " + result.getMonthlyPrice()
                        + "\nRental Months: " + result.getRentalMonths()
                        + "\nFull Price: " + result.getFullPrice()
                        + "\nAvailability: " + (result.isAvailable() ? "Available" : "Not Available");

                JOptionPane.showMessageDialog(this, infoMessage, "Searched Data", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Space ID not found!", "Search Fail", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter Space ID!", "Input ID", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void sortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButtonActionPerformed
        String selectedCriteria = (String) sortByComBox.getSelectedItem();
        String sortOrder = (String) ascDscComBox.getSelectedItem();

        if (selectedCriteria.equals("Customer Name")) {
            if (sortOrder.equals("Ascending")) {
                SelectionSort.sortByCustomerName(BlockData, true);
            } else {
                SelectionSort.sortByCustomerName(BlockData, false);
            }
        } else if (selectedCriteria.equals("Space ID")) {
            if (sortOrder.equals("Ascending")) {
                MergeSort.sortBySpaceID(BlockData);
            } else {
                InsertionSort.sortBySpaceIDDescending(BlockData);
            }
        }

        updateDataTable();
    }//GEN-LAST:event_sortButtonActionPerformed

    private void sortByComBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortByComBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sortByComBoxActionPerformed

    private void ascDscComBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ascDscComBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ascDscComBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDataButton;
    private javax.swing.JPanel adminDashTabPnl;
    private javax.swing.JComboBox<String> ascDscComBox;
    private javax.swing.JLabel bgImgLbl;
    private javax.swing.JLabel bgLbl;
    private javax.swing.JPanel buttonHolderPnl;
    private javax.swing.JButton clearFldsButton;
    private javax.swing.JTextField customerIDTxtFld;
    private javax.swing.JTextField customerNameTxtFld;
    private javax.swing.JTable dataTable;
    private javax.swing.JPanel dataTableTabPnl;
    private javax.swing.JButton deleteDataButton;
    private javax.swing.JLabel eligibleLbl;
    private javax.swing.JLabel feature1Lbl;
    private javax.swing.JLabel feature2Lbl;
    private javax.swing.JTextField flatNumTxtFld;
    private javax.swing.JLabel forgotpasswordLbl;
    private javax.swing.JButton getStartedButton;
    private javax.swing.JPanel homeTabPnl;
    private javax.swing.JLabel homeWelcomeTitleLbl;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel loginPnl;
    private javax.swing.JButton logoutButton;
    private javax.swing.JPanel mainPagePnl;
    private javax.swing.JTabbedPane mainPageTabs;
    private javax.swing.JTextField monPriceTxtFld;
    private javax.swing.JPasswordField passField;
    private javax.swing.JLabel passwordLbl;
    private javax.swing.JTextField rentalMonthsTxtFld;
    private javax.swing.JPanel rightPnlCover;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTxtFld;
    private javax.swing.JButton sortButton;
    private javax.swing.JComboBox<String> sortByComBox;
    private javax.swing.JLabel sortLbl;
    private javax.swing.JTextField spaceIDTxtFld;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JLabel textTitleLbl;
    private javax.swing.JLabel titleLoginLbl;
    private javax.swing.JLabel titleNameLbl;
    private javax.swing.JButton updateAvailabilityButton;
    private javax.swing.JTextField userField;
    private javax.swing.JLabel usernameLbl;
    // End of variables declaration//GEN-END:variables
}
